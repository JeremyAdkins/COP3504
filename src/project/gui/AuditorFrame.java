/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package project.gui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import project.Controller;
import project.model.Account;
import project.model.User;

import javax.swing.*;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.plaf.basic.BasicButtonUI;

/**
 *
 * @author Rich
 */
public final class AuditorFrame extends AbstractUserWindow {

    /**
     * Creates new form AuditorFrame
     */
    public AuditorFrame(Controller controller) {
        super(controller);
        initComponents();
        updateAuditorTable();
    }

    public void updateAuditorTable() {
        AuditorTable.setModel(new javax.swing.table.DefaultTableModel(
                controller.updateAuditorTableView(),
                new String[]{
            "User", "Account", "Balance", "Fraud status", "Employee?"
        }) {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });
        AuditorTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        AuditorTable.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AuditorTabHolder = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        AuditorTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        AuditorTable.setToolTipText("Double click on a row to view that account in a new tab.");
        AuditorTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AuditorTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(AuditorTable);

        AuditorTabHolder.addTab("ALL ACCOUNTS", jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AuditorTabHolder, javax.swing.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AuditorTabHolder, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AuditorTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AuditorTableMouseClicked
        User accountOwner = (User) AuditorTable.getValueAt(AuditorTable.getSelectedRow(), 0);
        Account account = (Account) AuditorTable.getValueAt(AuditorTable.getSelectedRow(), 1);
        if (evt.getClickCount() == 2) {
            //check if tab is already there (ignore first tab)
            for (int tabIndex = 1; tabIndex < AuditorTabHolder.getTabCount(); tabIndex++) {
                AccountTab tab = (AccountTab) AuditorTabHolder.getComponentAt(tabIndex);
                if (tab.getAccount().equals(account)) {
                    AuditorTabHolder.setSelectedIndex(tabIndex);
                    return;
                }
            }
            final AccountTab newTab = controller.newAccountTab(accountOwner, account);
            JPanel tabComp = new JPanel();
            JLabel title = new JLabel() {
                @Override
                public String getText() {
                    return newTab.getName();
                }
            };
            tabComp.add(title);
            title.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 5));
            tabComp.add(new TabButton(newTab));
            tabComp.setOpaque(false);
            AuditorTabHolder.add(newTab);
            AuditorTabHolder.setTabComponentAt(AuditorTabHolder.getTabCount()-1, tabComp);
        }
    }//GEN-LAST:event_AuditorTableMouseClicked

    public class TabButton extends JButton implements ActionListener {

        final AccountTab accTab;
        public TabButton(AccountTab tab) {
            super("x");
            accTab = tab;
            setToolTipText("close this tab");
            setContentAreaFilled(false);
            setFocusable(false);
            setBorderPainted(false);
            addMouseListener(buttonMouseListener);
            setRolloverEnabled(true);
            addActionListener(this);
            setUI(new BasicButtonUI());
            pack();
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            AuditorTabHolder.remove(accTab);
        }
        private MouseListener buttonMouseListener = new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                TabButton.this.setForeground(Color.red);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                TabButton.this.setForeground(Color.black);
            }
        };
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane AuditorTabHolder;
    private javax.swing.JTable AuditorTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
