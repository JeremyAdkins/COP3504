/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package project.gui;

import project.Controller;

import javax.swing.*;
import java.util.List;

/**
 *
 * @author Rich
 */
public final class AccountHolderFrame extends AbstractUserWindow {

    /**
     * Creates new form AccountHolderFrame
     */
    private List<AccountTab> accountTabs;
    private JCheckBoxMenuItem hideClosedAccounts = new JCheckBoxMenuItem();

    public AccountHolderFrame(Controller controller) {
        super(controller);
        initComponents();
        initMoreComponents();
        buildAccountTabs();
        setSummaryTableModel();
    }

    private void initMoreComponents() {
        FileMenu.add(hideClosedAccounts);
        hideClosedAccounts.setText("Hide Closed Accounts");
        hideClosedAccounts.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        hideClosedAccounts.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                if (hideClosedAccounts.isSelected()) {
                    for (AccountTab accTab : accountTabs) {
                        if (accTab.getAccount().isClosed()) {
                            AccountHolderTabs.remove(accTab);
                        }
                    }
                }else{
                buildAccountTabs();
                }
                setSummaryTableModel();
            }
        });
    }

    public void setSummaryTableModel() {
        SummaryTable.setModel(new javax.swing.table.DefaultTableModel(
                controller.updateAccountHolderTableView(hideClosedAccounts.isSelected()),
                new String[]{
            "Account type", "Account number", "Balance"
        }) {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });
        SummaryTable.revalidate();
    }

    private void buildAccountTabs() {
        accountTabs = controller.getTabs(this);
        for (AccountTab accTab : accountTabs) {
            if (accTab.getAccount().isClosed() && hideClosedAccounts.isSelected()) {
                continue;
            }
            AccountHolderTabs.add(accTab);
        }
        AccountHolderTabs.revalidate();
    }

    @Override
    public void logout() {
        super.logout();
        controller.clearTabs();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AccountHolderTabs = new javax.swing.JTabbedPane();
        HomePanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SummaryTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setLocationByPlatform(true);
        setName(""); // NOI18N

        HomePanel.setAutoscrolls(true);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Accounts Summary");

        jScrollPane1.setViewportView(SummaryTable);

        javax.swing.GroupLayout HomePanelLayout = new javax.swing.GroupLayout(HomePanel);
        HomePanel.setLayout(HomePanelLayout);
        HomePanelLayout.setHorizontalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE))
                .addContainerGap())
        );
        HomePanelLayout.setVerticalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                .addContainerGap())
        );

        AccountHolderTabs.addTab("HOME", HomePanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AccountHolderTabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AccountHolderTabs)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane AccountHolderTabs;
    private javax.swing.JPanel HomePanel;
    private javax.swing.JTable SummaryTable;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
